-- client.lua
local serverId = 1
local port = 1234

-- Utility functions for UI
local function drawBox(x, y, width, height, color)
    term.setBackgroundColor(color)
    for i = 0, height - 1 do
        term.setCursorPos(x, y + i)
        term.write(string.rep(" ", width))
    end
    term.setBackgroundColor(colors.black)
end

local function drawButton(x, y, width, label, buttonColor, textColor)
    term.setCursorPos(x, y)
    term.setBackgroundColor(buttonColor)
    term.setTextColor(textColor)
    term.write(string.rep(" ", width))
    term.setCursorPos(x + math.floor((width - #label) / 2), y)
    term.write(label)
    term.setBackgroundColor(colors.black)
end

local function inputBox(x, y, width, label, password)
    term.setCursorPos(x, y)
    term.setTextColor(colors.white)
    term.write(label .. ": ")
    term.setBackgroundColor(colors.lightGray)
    term.setTextColor(colors.black)
    term.setCursorPos(x + #label + 2, y)
    local input = read(password)
    term.setBackgroundColor(colors.black)
    return input
end

local function centerText(y, text)
    local width, _ = term.getSize()
    term.setCursorPos((width - #text) / 2, y)
    term.write(text)
end

local function drawClickableText(x, y, text, textColor)
    term.setCursorPos(x, y)
    term.setTextColor(textColor)
    term.write(text)
    term.setTextColor(colors.white)
end

local function isClickWithin(x, y, width, height, clickX, clickY)
    return clickX >= x and clickX <= x + width - 1 and clickY >= y and clickY <= y + height - 1
end

local function sendRequest(request)
    rednet.open("back")
    rednet.send(serverId, textutils.serialize(request))
    local senderId, response = rednet.receive(port)
    rednet.close()
    return response
end

local function fileBrowser()
    local currentDir = "/"
    while true do
        term.clear()
        drawBox(1, 1, 51, 19, colors.blue)
        term.setCursorPos(2, 2)
        term.write("Current Directory: " .. currentDir)

        local files = fs.list(currentDir)
        local y = 4

        for i, file in ipairs(files) do
            if fs.isDir(currentDir .. file) then
                term.setTextColor(colors.cyan)
            else
                term.setTextColor(colors.white)
            end
            term.setCursorPos(2, y)
            term.write(file)
            y = y + 1
        end

        local event, button, x, y = os.pullEvent("mouse_click")
        local selectedFile = files[y - 4]
        if selectedFile then
            if fs.isDir(currentDir .. selectedFile) then
                currentDir = currentDir .. selectedFile .. "/"
            else
                return currentDir .. selectedFile
            end
        end
    end
end

local function createUser()
    term.clear()
    drawBox(1, 1, 51, 19, colors.blue)
    local width, height = term.getSize()
    local username = ""
    local password = ""
    local bio = ""
    local profilePicture = ""

    while true do
        term.clear()
        drawBox(1, 1, 51, 19, colors.blue)
        centerText(2, "Create a New Profile")

        username = inputBox((width - 30) / 2, 4, 20, "Username")
        password = inputBox((width - 30) / 2, 6, 20, "Password")
        bio = inputBox((width - 30) / 2, 8, 20, "Bio")

        centerText(10, "Choose profile picture option:")
        drawButton((width - 30) / 2, 12, 30, "1. Upload existing paint file", colors.gray, colors.white)
        drawButton((width - 30) / 2, 14, 30, "2. Create new profile picture", colors.gray, colors.white)
        drawButton((width - 30) / 2, 16, 30, "3. Return to Menu", colors.gray, colors.yellow)

        local event, button, x, y = os.pullEvent("mouse_click")
        if isClickWithin((width - 30) / 2, 12, 30, 1, x, y) then
            profilePicture = fileBrowser()
            local request = {type = "createUser", username = username, password = password, bio = bio, profilePicture = profilePicture}
            print(sendRequest(request))
            term.setCursorPos((width - 30) / 2, 18)
            term.setTextColor(colors.green)
            term.write("Profile created successfully")
            term.setTextColor(colors.white)
            sleep(2)
            return
        elseif isClickWithin((width - 30) / 2, 14, 30, 1, x, y) then
            shell.run("paint profilePicture.nfp")
            profilePicture = "profilePicture.nfp"
            local request = {type = "createUser", username = username, password = password, bio = bio, profilePicture = profilePicture}
            print(sendRequest(request))
            term.setCursorPos((width - 30) / 2, 18)
            term.setTextColor(colors.green)
            term.write("Profile created successfully")
            term.setTextColor(colors.white)
            sleep(2)
            return
        elseif isClickWithin((width - 30) / 2, 16, 30, 1, x, y) then
            return
        end

        if username ~= "" and password ~= "" and bio ~= "" and profilePicture ~= "" then
            local request = {type = "createUser", username = username, password = password, bio = bio, profilePicture = profilePicture}
            print(sendRequest(request))
            term.setCursorPos((width - 30) / 2, 18)
            term.setTextColor(colors.green)
            term.write("Profile created successfully")
            term.setTextColor(colors.white)
            sleep(2)
            break
        else
            term.setCursorPos((width - 30) / 2, 18)
            term.setTextColor(colors.red)
            term.write("Please fill in all fields")
            term.setTextColor(colors.white)
        end
    end
end

local function loginScreen()
    term.clear()
    drawBox(1, 1, 51, 19, colors.blue)
    centerText(4, "Login")

    local width, height = term.getSize()
    local usernameX, usernameY = (width - 20) / 2, height / 2 - 2
    local passwordX, passwordY = (width - 20) / 2, height / 2
    local loginX, loginY = (width - 10) / 2, height / 2 + 3
    local backX, backY = (width - 20) / 2, height / 2 + 5

    while true do
        drawBox(1, 1, 51, 19, colors.blue)
        centerText(4, "Login")

        drawBox(usernameX, usernameY, 20, 1, colors.lightGray)
        term.setCursorPos(usernameX, usernameY)
        term.write("Username")
        drawBox(passwordX, passwordY, 20, 1, colors.lightGray)
        term.setCursorPos(passwordX, passwordY)
        term.write("Password")

        drawButton(loginX, loginY, 10, "Login", colors.gray, colors.white)
        drawClickableText(backX, backY, "Return to Menu", colors.yellow)

        local event, button, x, y = os.pullEvent("mouse_click")
        if isClickWithin(usernameX, usernameY, 20, 1, x, y) then
            term.setCursorPos(usernameX + 1, usernameY)
            term.setBackgroundColor(colors.lightGray)
            username = read()
            term.setBackgroundColor(colors.black)
        elseif isClickWithin(passwordX, passwordY, 20, 1, x, y) then
            term.setCursorPos(passwordX + 1, passwordY)
            term.setBackgroundColor(colors.lightGray)
            password = read("*")
            term.setBackgroundColor(colors.black)
                elseif isClickWithin(loginX, loginY, 10, 1, x, y) then
            local request = {type = "login", username = username, password = password}
            local response = sendRequest(request)
            if response == "Login successful" then
                return true, username
            else
                term.setCursorPos(loginX, loginY + 2)
                term.setTextColor(colors.red)
                term.write("Invalid username or password")
                term.setTextColor(colors.white)
                sleep(2)
            end
        elseif isClickWithin(backX, backY, #("Return to Menu"), 1, x, y) then
            return false, ""
        end
    end
end

local function showProfile(username)
    local request = {type = "showProfile", username = username}
    local response = sendRequest(request)
    local profile = textutils.unserialize(response)
    if type(profile) == "table" then
        print("Bio: " .. (profile.bio or ""))
        print("Profile Picture:")
        if fs.exists(profile.profilePicture) then
            shell.run("paint", profile.profilePicture)
        else
            print("No profile picture found.")
        end
        print("Followers: " .. profile.followers)
        print("Following: " .. profile.following)
    else
        print(response)
    end
end

local function updateProfile(username)
    print("Enter new bio:")
    local bio = read()
    print("Choose profile picture option:")
    print("1. Upload existing paint file")
    print("2. Create new profile picture")
    local choice = read()
    local profilePicture

    if choice == "1" then
        profilePicture = fileBrowser()
    elseif choice == "2" then
        shell.run("paint profilePicture.nfp")
        profilePicture = "profilePicture.nfp"
    end

    local request = {type = "updateProfile", username = username, bio = bio, profilePicture = profilePicture}
    print(sendRequest(request))
end

local function tweet(username)
    print("Enter tweet:")
    local message = read()
    local request = {type = "tweet", username = username, message = message}
    print(sendRequest(request))
end

local function followUser(username)
    print("Enter the username of the person to follow:")
    local followee = read()
    local request = {type = "followUser", follower = username, followee = followee}
    print(sendRequest(request))
end

local function unfollowUser(username)
    print("Enter the username of the person to unfollow:")
    local followee = read()
    local request = {type = "unfollowUser", follower = username, followee = followee}
    print(sendRequest(request))
end

local function viewTweets(username)
    local request = {type = "viewTweets", username = username}
    local response = sendRequest(request)
    local tweets = textutils.unserialize(response)
    if type(tweets) == "table" then
        for _, tweet in ipairs(tweets) do
            print(tweet.time .. " - " .. tweet.user .. ": " .. tweet.message)
        end
    else
        print("No tweets found.")
    end
end

local function showMenu(username)
    term.clear()
    drawBox(1, 1, 51, 19, colors.blue)
    drawButton(2, 2, 20, "1. Tweet", colors.gray, colors.white)
    drawButton(2, 4, 20, "2. View Profile", colors.gray, colors.white)
    drawButton(2, 6, 20, "3. Follow User", colors.gray, colors.white)
    drawButton(2, 8, 20, "4. Unfollow User", colors.gray, colors.white)
    drawButton(2, 10, 20, "5. View Tweets", colors.gray, colors.white)
    drawButton(2, 12, 20, "6. Update Profile", colors.gray, colors.white)
    drawButton(2, 14, 20, "7. Exit", colors.gray, colors.white)
end

local function mainMenu(username)
    while true do
        showMenu(username)
        local choice = read()

        if choice == "1" then
            tweet(username)
        elseif choice == "2" then
            showProfile(username)
        elseif choice == "3" then
            followUser(username)
        elseif choice == "4" then
            unfollowUser(username)
        elseif choice == "5" then
            viewTweets(username)
        elseif choice == "6" then
            updateProfile(username)
        elseif choice == "7" then
            break
        else
            print("Invalid choice.")
        end
    end
end

local function start()
    while true do
        term.clear()
        drawBox(1, 1, 51, 19, colors.blue)
        drawButton(2, 2, 20, "Login", colors.gray, colors.white)
        drawButton(2, 4, 20, "Create a new profile", colors.gray, colors.yellow)
        drawButton(2, 6, 20, "Exit", colors.gray, colors.white)

        local event, button, x, y = os.pullEvent("mouse_click")
        if isClickWithin(2, 2, 20, 1, x, y) then
            local success, username = loginScreen()
            if success then
                mainMenu(username)
            end
        elseif isClickWithin(2, 4, 20, 1, x, y) then
            createUser()
        elseif isClickWithin(2, 6, 20, 1, x, y) then
            break
        end
    end
end

start()
